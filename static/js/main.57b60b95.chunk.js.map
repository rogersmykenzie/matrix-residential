{"version":3,"sources":["components/Intro/IntroStyles.js","redux/userReducer.js","components/Intro/Intro.js","components/LoginModul/LoginModulStyles.js","components/LoginModul/LoginModul.js","components/Nav/NavStyles.js","components/Nav/Nav.js","redux/store.js","components/Welcome/WelcomeStyles.js","components/Welcome/Welcome.js","components/CheckboxComp/CheckboxComp.js","components/PageOne/PageOneStyles.js","components/PageOne/PageOne.js","components/Page/Page.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["IntroStyles","textFieldStyle","width","buttonStyle","backgroundColor","color","fontFamily","fontWeight","initalState","firstName","lastName","phoneNumber","email","currPage","UPDATE_FIRST_NAME","UPDATE_LAST_NAME","UPDATE_PHONE_NUMBER","UPDATE_EMAIL","UPDATE_CURR_PAGE","connect","state","changeFirstName","name","type","payload","changeLastName","changeEmail","changePhoneNumber","number","nums","newNum","split","filter","val","includes","join","props","react_default","a","createElement","className","Paper_default","TextField_default","variant","placeholder","style","styles","onChange","e","target","value","react_router_dom","to","Button_default","LoginModulStyles","paperStyle","height","LoginModul","_React$useState","React","useState","_React$useState2","Object","slicedToArray","setFirstName","_React$useState3","_React$useState4","setLastName","_React$useState5","_React$useState6","setEmailAddress","_React$useState7","_React$useState8","setPhone","_React$useState9","_React$useState10","setPassword","_React$useState11","_React$useState12","setVerifyPassword","concat","modulStatus","elevation","NavStyles","appBarStyle","typographyStyle","AppBar_default","position","Toolbar_default","Typography_default","Fragment","components_LoginModul_LoginModul","createStore","arguments","length","undefined","action","console","log","objectSpread","WelcomeStyles","Welcome","CheckboxComp","FormControlLabel_default","control","Checkbox_default","whenClicked","label","PageOneStyles","externalStyle","marginTop","incCurrentPage","pickedFirstAnswer","setFirst","pickedSecondAnswer","setSecond","setPicked","setPicked2","useEffect","map","components_CheckboxComp_CheckboxComp","Page","match","params","pageNum","components_PageOne_PageOne","routes","react_router","path","component","Intro","App","es","store","components_Nav_Nav","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.57b60b95.chunk.js","sourcesContent":["export default {\n    textFieldStyle: {\n        width: '60%',\n    },\n    buttonStyle: {\n        backgroundColor: \"#212529\",\n        color: \"white\",\n        fontFamily: \"'Poppins', sans-serif\",\n        fontWeight: 1000\n    }\n}","const initalState = {\n    firstName: '',\n    lastName: '',\n    phoneNumber: '',\n    email: '',\n    currPage: 0\n}\n\nconst UPDATE_FIRST_NAME = 'UPDATE_FIRST_NAME';\nconst UPDATE_LAST_NAME = 'UPDATE_LAST_NAME'\nconst UPDATE_PHONE_NUMBER = 'UPDATE_PHONE_NUMBER';\nconst UPDATE_EMAIL = 'UPDATE_EMAIL';\nconst UPDATE_CURR_PAGE = 'UPDATE_CURR_PAGE';\n\nexport function incCurrentPage() {\n    return {\n        type: UPDATE_CURR_PAGE,\n    }\n}\nexport function changeEmail(email) {\n    return {\n        type: UPDATE_EMAIL,\n        payload: email\n    }\n}\nexport function changePhoneNumber(number) {\n    const nums = [1,2,3,4,5,6,7,8,9,0];\n    let newNum = number.split('').filter(val => {\n        return nums.includes(+val)\n    }).join('');\n    return {\n        type: UPDATE_PHONE_NUMBER,\n        payload: newNum\n    }\n}\nexport function changeFirstName(name) {\n    return {\n        type: UPDATE_FIRST_NAME,\n        payload: name\n    }\n}\nexport function changeLastName(name) {\n    return {\n        type: UPDATE_LAST_NAME,\n        payload: name\n    }\n}\n\nexport default function reducer(state=initalState, action) {\n    console.log(state);\n    switch(action.type) {\n        case UPDATE_CURR_PAGE:\n        return {\n            ...state,\n            currPage: state.currPage + 1\n        }\n        case UPDATE_FIRST_NAME:\n        return {\n            ...state,\n            firstName: action.payload\n        }\n        case UPDATE_LAST_NAME:\n        return {\n            ...state,\n            lastName: action.payload\n        }\n        case UPDATE_PHONE_NUMBER:\n        return {\n            ...state,\n            phoneNumber: action.payload\n        }\n        case UPDATE_EMAIL:\n        return {\n            ...state,\n            email: action.payload\n        }\n        default: return state;\n    }\n}","import React, { useState } from 'react'\n//mui imports\nimport Paper from '@material-ui/core/Paper'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\n//inline styling import\nimport styles from './IntroStyles'\n//css import\nimport './Intro.css';\n//redux imports\nimport { connect } from 'react-redux';\nimport { changeFirstName, changeLastName, changeEmail, changePhoneNumber } from '../../redux/userReducer';\n//routing imports\nimport {Link} from 'react-router-dom';\n\nconst Intro = props => {\n    return (\n        <div \n        className='intro-container'\n        >\n            <Paper\n            className='intro-paper'\n            >\n                <h1>Welcome to Matrix Residential Online</h1>\n                <h1>To get started, we just need a bit of info:</h1>\n                <div\n                className='intro-text-field-container'\n                >\n                    <TextField\n                    variant='outlined'\n                    placeholder='First Name'\n                    style={styles.textFieldStyle}\n                    onChange={e => props.changeFirstName(e.target.value)}\n                    />\n                    \n                    <TextField \n                    variant='outlined'\n                    placeholder='Last Name'\n                    style={styles.textFieldStyle}\n                    onChange={e => props.changeLastName(e.target.value)}\n                    />\n\n                    <TextField \n                    variant='outlined'\n                    placeholder='Email'\n                    style={styles.textFieldStyle}\n                    onChange={e => props.changeEmail(e.target.value)}\n                    />\n\n                    <TextField\n                    variant='outlined'\n                    placeholder='Phone Number'\n                    style={styles.textFieldStyle}\n                    onChange={e => props.changePhoneNumber(e.target.value)}\n                    />\n\n                    <Link to='/welcome'>\n                        <Button \n                        variant=\"contained\"\n                        style={styles.buttonStyle}\n                        >\n                            Continue\n                        </Button>\n                    </Link>\n                </div>\n            </Paper>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => state;\n\nexport default connect(mapStateToProps, {changeFirstName, changeLastName, changeEmail, changePhoneNumber})(Intro);","export default {\n    paperStyle: {\n        width: '100%',\n        height: '100%'\n    },\n    textFieldStyle: {\n        height: '40px',\n        width: '280px'\n    },\n    buttonStyle: {\n        fontFamily: \"'Poppins', sans-serif\",\n        backgroundColor: '#212529',\n        color: 'white'\n    }\n}","import React from 'react';\nimport './LoginModul.css';\nimport Paper from '@material-ui/core/Paper'\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport styles from './LoginModulStyles';\n\nconst LoginModul = props => {\n    const [firstName, setFirstName] = React.useState('');\n    const [lastName, setLastName] = React.useState('');\n    const [emailAddress, setEmailAddress] = React.useState('');\n    const [phone, setPhone] = React.useState('');\n    const [password, setPassword] = React.useState('');\n    const [verifyPassword, setVerifyPassword] = React.useState('');\n\n    //Setup for live phone number verification and formatting\n    // React.useEffect(() => {\n\n    // }, [phone])\n\n\n    return(\n        <div \n        className={`login-modul${props.modulStatus}`}>\n            <Paper \n            className='login-modul-paper'\n            style={styles.paperStyle} \n            elevation={2}>\n                <main \n                className='login-modul-paper-content'>\n                    <span className='font-one'>Sign Up For An Account Today</span>\n                    <span className='login-modul-line'></span>\n                    <div>\n                        <TextField\n                        variant=\"outlined\"\n                        placeholder=\"First Name\"\n                        style={styles.textFieldStyle}\n                        onChange={e => setFirstName(e.target.value)}\n                        />\n                        \n                        <TextField\n                        variant=\"outlined\"\n                        placeholder=\"Last Name\"\n                        style={styles.textFieldStyle}\n                        onChange={e => setLastName(e.target.value)}\n                        />\n                    </div>\n                    <div>\n                        <TextField\n                        variant=\"outlined\"\n                        placeholder=\"Email Address\"\n                        type=\"email\"\n                        style={styles.textFieldStyle}\n                        onChange={e => setEmailAddress(e.target.value)}\n                        />\n\n                        <TextField\n                        variant=\"outlined\"\n                        placeholder=\"Phone Number\"\n                        type=\"tel\"\n                        style={styles.textFieldStyle}\n                        onChange={e => setPhone(e.target.value)}\n                        />\n                    </div>\n                    <div>\n                        <TextField \n                        variant=\"outlined\"\n                        placeholder=\"Password\"\n                        type=\"password\"\n                        style={styles.textFieldStyle}\n                        onChange={e => setPassword(e.target.value)}\n                        />\n\n                        <TextField \n                        variant=\"outlined\"\n                        placeholder=\"Verify Password\"\n                        type=\"password\" \n                        style={styles.textFieldStyle}\n                        onChange={e => setVerifyPassword(e.target.value)}\n                        />\n                    </div>\n\n                    <div>\n                        <Button\n                        variant=\"contained\"\n                        style={styles.buttonStyle}\n                        >\n                            Sign Up\n                        </Button> \n                    </div>\n                </main>\n            </Paper>\n        </div>\n    )\n}\n\nexport default LoginModul;","export default {\n    appBarStyle: {\n        backgroundColor: \"#212529\"\n    },\n    typographyStyle: {\n        color: 'white',\n    },\n    buttonStyle: {\n        color: 'white'\n    },\n}","import React from 'react';\n//css\nimport './Nav.css';\n//mui\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport LoginModul from '../LoginModul/LoginModul';\n//inline styling\nimport styles from './NavStyles';\n//redux\nimport { connect } from 'react-redux';\n\nconst Nav = props => {\n\n    const [modulStatus, setStatus] = React.useState('');\n\n    return (\n        <div>\n            <AppBar \n            position='static' \n            style={styles.appBarStyle}>\n                <Toolbar \n                className='nav-toolbar'>\n                    <Typography \n                    variant=\"title\" \n                    style={styles.typographyStyle}>\n                        Home\n                    </Typography>\n                    {/* <Button\n                    style={styles.buttonStyle}\n                    onClick={() => setStatus(modulStatus === '-open' ? '-close' : '-open')}\n                    >\n                        GET STARTED\n                    </Button> */}\n                    <Typography\n                    variant='title'\n                    style={styles.typographyStyle}\n                    >\n                    {props.currPage ? <>\n                    Step {props.currPage} of 26\n                    </> : null }\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <LoginModul \n            modulStatus={modulStatus} />\n        </div>\n    )\n}\n\nconst mapStateToProps = state => state;\n\nexport default connect(mapStateToProps)(Nav);","import {createStore, combineReducers} from 'redux';\nimport userReducer from './userReducer';\n\nexport default createStore(userReducer);\n","import style from '../Intro/IntroStyles';\n\nexport default {\n    buttonStyle: style.buttonStyle\n}","import React from 'react';\n//mui imports\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\n//css imports\nimport './Welcome.css';\n//inline styles import\nimport styles from './WelcomeStyles';\n//routing\nimport { Link } from 'react-router-dom';\n\nconst Welcome = props => {\n    return(\n        <div\n        className='welcome-container'\n        >\n            <Paper\n            className='welcome-paper'\n            >\n                <h1>Thanks for that! We can now get started on the important bits</h1>\n                <Link to='/page/1'>\n                    <Button\n                    variant='contained'\n                    style={styles.buttonStyle}\n                    >\n                        Proceed\n                    </Button>\n                </Link>\n            </Paper>\n        </div>\n    )\n}\n\nexport default Welcome;","import React from 'react';\n//mui\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst CheckboxComp = props => {\n    return (\n        <>\n            <FormControlLabel \n            control={\n                <Checkbox \n                onChange={() => props.whenClicked()}\n                />\n            }\n            label={props.label}\n            />\n        </>\n    )\n}\n\nexport default CheckboxComp","import externalStyle from '../Intro/IntroStyles'\nexport default {\n    buttonStyle: {\n        ...externalStyle.buttonStyle,\n        marginTop: '10vh'\n    }\n}","import React from 'react';\n//mui\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\n//css\nimport './PageOne.css';\n//redux\nimport { incCurrentPage } from '../../redux/userReducer';\nimport { connect } from 'react-redux';\n//components\nimport CheckboxComp from '../CheckboxComp/CheckboxComp';\n//inline styling\nimport styles from './PageOneStyles'\n\nconst PageOne = props => {\n    const [pickedFirstAnswer, setFirst] = React.useState(false);\n    const [pickedSecondAnswer, setSecond] = React.useState(false);\n\n    const setPicked = () => {\n        setFirst(true)\n    }\n\n    const setPicked2 = () => {\n        setSecond(true);\n    }\n    \n    React.useEffect(() => {\n        props.incCurrentPage();\n    }, [])\n\n    const propertyTypes = ['Condo', 'Farm/Ranch', 'Half Duplex', 'Single Family', 'Townhouse'];\n    const housingTypes = ['Apartment', 'Attached or 1/2 duplex', 'Condo/Townhome', 'Designated Historical Home', 'Doublewide Mobile w/ Land', 'Farm/Ranch House', 'Garden/Zero Lot Line', 'Hi Rise', 'Historical/Conservation Dist.', 'Interval Ownership', 'Lake House', 'Log Cabin', 'Manufacture (cert exch)', 'Resort Property', 'Single Detached', 'Single Mobile w/ Land', 'Underground', 'Vacation Home'];\n    return(\n        <div\n        className='page-one-container'\n        >\n            <Paper\n            className='page-one-paper'\n            >\n                <h1>Please select a property type:</h1>\n                {propertyTypes.map(val => {\n                    return <CheckboxComp \n                    label={val}\n                    whenClicked={setPicked}\n                    />\n                })}\n                {pickedFirstAnswer && \n                <>\n                    <h1>\n                        Select all that describe your housing type:\n                    </h1>\n                    {housingTypes.map(val => {\n                        return <CheckboxComp \n                        label={val}\n                        whenClicked={setPicked2}\n                        />\n                    })}\n                </>\n                }\n                <br />\n                {pickedSecondAnswer && <Button\n                style={styles.buttonStyle}\n                variant='contained'\n                >\n                    Next\n                </Button>}\n            </Paper>\n        </div>\n    )\n}\n\nconst mapStateToProps = props => props;\n\nexport default connect(mapStateToProps, {incCurrentPage})(PageOne);","import React from 'react';\n//components\nimport PageOne from '../PageOne/PageOne';\nconst Page = props => {\n    switch(props.match.params.pageNum) {\n        case '1':\n        return <PageOne />\n        default: return <div>\n            <h1>Oops! Page could not be found :( Please contact site administrator at mykenzierogers@gmail.com</h1>\n        </div>\n    }\n}\n\nexport default Page;","import React from 'react';\n//routing imports\nimport {Switch, Route} from 'react-router-dom';\n//component imports\nimport Intro from './components/Intro/Intro'\nimport Welcome from './components/Welcome/Welcome';\nimport Page from './components/Page/Page';\n\nexport default (\n    <Switch>\n        <Route path='/page/:pageNum' component={Page} />\n        <Route path='/welcome' component={Welcome} />\n        <Route path='/' component={Intro} />\n    </Switch>\n)","import React from 'react';\n//component imports\nimport Intro from './components/Intro/Intro'\nimport Nav from './components/Nav/Nav';\n//css imports\nimport './App.css';\n//redux imports\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n//routing imports\nimport { HashRouter } from 'react-router-dom'\nimport routes from './routes'\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Provider store={store}>\n        <div className=\"App\">\n          <Nav />\n          {routes}\n        </div>\n      </Provider>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}