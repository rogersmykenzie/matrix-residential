{"version":3,"sources":["components/Intro/IntroStyles.js","redux/userReducer.js","components/Intro/Intro.js","components/LoginModul/LoginModulStyles.js","components/LoginModul/LoginModul.js","components/Nav/NavStyles.js","components/Nav/Nav.js","redux/formInfoReducer.js","redux/store.js","components/Welcome/WelcomeStyles.js","components/Welcome/Welcome.js","components/CheckboxComp/CheckboxComp.js","components/PageOne/PageOneStyles.js","components/PageOne/PageOne.js","components/Page/Page.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["IntroStyles","textFieldStyle","width","buttonStyle","backgroundColor","color","fontFamily","fontWeight","initalState","firstName","lastName","phoneNumber","email","currPage","UPDATE_FIRST_NAME","UPDATE_LAST_NAME","UPDATE_PHONE_NUMBER","UPDATE_EMAIL","UPDATE_CURR_PAGE","connect","state","changeFirstName","name","type","payload","changeLastName","changeEmail","changePhoneNumber","number","nums","newNum","split","filter","val","includes","join","props","react_default","a","createElement","className","Paper_default","TextField_default","variant","placeholder","style","styles","onChange","e","target","value","react_router_dom","to","Button_default","LoginModulStyles","paperStyle","height","LoginModul","_React$useState","React","useState","_React$useState2","Object","slicedToArray","setFirstName","_React$useState3","_React$useState4","setLastName","_React$useState5","_React$useState6","setEmailAddress","_React$useState7","_React$useState8","setPhone","_React$useState9","_React$useState10","setPassword","_React$useState11","_React$useState12","setVerifyPassword","concat","modulStatus","elevation","NavStyles","appBarStyle","typographyStyle","AppBar_default","position","Toolbar_default","Typography_default","Fragment","components_LoginModul_LoginModul","initialState","propertyTypes","housingTypes","homeStyles","ADD_PROPERTY_TYPE","ADD_HOUSING_TYPE","ADD_HOME_STYLE","REMOVE_PROPERTY_TYPE","REMOVE_HOUSING_TYPE","REMOVE_HOME_STYLE","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducer","combineReducers","userReducer","arguments","length","undefined","action","console","log","objectSpread","formInfoReducer","toConsumableArray","newPropertyTypes","splice","findIndex","newHousingTypes","newHomeStyles","createStore","WelcomeStyles","Welcome","CheckboxComp","isChecked","toggle","FormControlLabel_default","control","Checkbox_default","whenClicked","whenUnclicked","label","PageOneStyles","externalStyle","marginTop","setCurrentPage","num","_useState","_useState2","numPickedFirstAnswer","setFirst","_useState3","_useState4","numPickedSecondAnswer","setSecond","setPicked","unPicked","setPicked2","unPicked2","useEffect","map","components_CheckboxComp_CheckboxComp","Page","match","params","pageNum","components_PageOne_PageOne","routes","react_router","path","component","Intro","App","es","store","components_Nav_Nav","Boolean","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7a1ab01a.chunk.js","sourcesContent":["export default {\n    textFieldStyle: {\n        width: '60%',\n    },\n    buttonStyle: {\n        backgroundColor: \"#212529\",\n        color: \"white\",\n        fontFamily: \"'Poppins', sans-serif\",\n        fontWeight: 1000\n    }\n}","const initalState = {\n    firstName: '',\n    lastName: '',\n    phoneNumber: '',\n    email: '',\n    currPage: 0\n}\n\nconst UPDATE_FIRST_NAME = 'UPDATE_FIRST_NAME';\nconst UPDATE_LAST_NAME = 'UPDATE_LAST_NAME'\nconst UPDATE_PHONE_NUMBER = 'UPDATE_PHONE_NUMBER';\nconst UPDATE_EMAIL = 'UPDATE_EMAIL';\nconst UPDATE_CURR_PAGE = 'UPDATE_CURR_PAGE';\n\nexport function setCurrentPage(num) {\n    return {\n        type: UPDATE_CURR_PAGE,\n        payload: num\n    }\n}\nexport function changeEmail(email) {\n    return {\n        type: UPDATE_EMAIL,\n        payload: email\n    }\n}\nexport function changePhoneNumber(number) {\n    const nums = [1,2,3,4,5,6,7,8,9,0];\n    let newNum = number.split('').filter(val => {\n        return nums.includes(+val)\n    }).join('');\n    return {\n        type: UPDATE_PHONE_NUMBER,\n        payload: newNum\n    }\n}\nexport function changeFirstName(name) {\n    return {\n        type: UPDATE_FIRST_NAME,\n        payload: name\n    }\n}\nexport function changeLastName(name) {\n    return {\n        type: UPDATE_LAST_NAME,\n        payload: name\n    }\n}\n\nexport default function reducer(state=initalState, action) {\n    console.log(state);\n    switch(action.type) {\n        case UPDATE_CURR_PAGE:\n        return {\n            ...state,\n            currPage: action.payload\n        }\n        case UPDATE_FIRST_NAME:\n        return {\n            ...state,\n            firstName: action.payload\n        }\n        case UPDATE_LAST_NAME:\n        return {\n            ...state,\n            lastName: action.payload\n        }\n        case UPDATE_PHONE_NUMBER:\n        return {\n            ...state,\n            phoneNumber: action.payload\n        }\n        case UPDATE_EMAIL:\n        return {\n            ...state,\n            email: action.payload\n        }\n        default: return state;\n    }\n}","import React, { useState } from 'react'\n//mui imports\nimport Paper from '@material-ui/core/Paper'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\n//inline styling import\nimport styles from './IntroStyles'\n//css import\nimport './Intro.css';\n//redux imports\nimport { connect } from 'react-redux';\nimport { changeFirstName, changeLastName, changeEmail, changePhoneNumber } from '../../redux/userReducer';\n//routing imports\nimport {Link} from 'react-router-dom';\n\nconst Intro = props => {\n    return (\n        <div \n        className='intro-container'\n        >\n            <Paper\n            className='intro-paper'\n            >\n                <h1>Welcome to Matrix Residential Online</h1>\n                <h1>To get started, we just need a bit of info:</h1>\n                <div\n                className='intro-text-field-container'\n                >\n                    <TextField\n                    variant='outlined'\n                    placeholder='First Name'\n                    style={styles.textFieldStyle}\n                    onChange={e => props.changeFirstName(e.target.value)}\n                    />\n                    \n                    <TextField \n                    variant='outlined'\n                    placeholder='Last Name'\n                    style={styles.textFieldStyle}\n                    onChange={e => props.changeLastName(e.target.value)}\n                    />\n\n                    <TextField \n                    variant='outlined'\n                    placeholder='Email'\n                    style={styles.textFieldStyle}\n                    onChange={e => props.changeEmail(e.target.value)}\n                    />\n\n                    <TextField\n                    variant='outlined'\n                    placeholder='Phone Number'\n                    style={styles.textFieldStyle}\n                    onChange={e => props.changePhoneNumber(e.target.value)}\n                    />\n\n                    <Link to='/welcome'>\n                        <Button \n                        variant=\"contained\"\n                        style={styles.buttonStyle}\n                        >\n                            Continue\n                        </Button>\n                    </Link>\n                </div>\n            </Paper>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => state;\n\nexport default connect(mapStateToProps, {changeFirstName, changeLastName, changeEmail, changePhoneNumber})(Intro);","export default {\n    paperStyle: {\n        width: '100%',\n        height: '100%'\n    },\n    textFieldStyle: {\n        height: '40px',\n        width: '280px'\n    },\n    buttonStyle: {\n        fontFamily: \"'Poppins', sans-serif\",\n        backgroundColor: '#212529',\n        color: 'white'\n    }\n}","import React from 'react';\nimport './LoginModul.css';\nimport Paper from '@material-ui/core/Paper'\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport styles from './LoginModulStyles';\n\nconst LoginModul = props => {\n    const [firstName, setFirstName] = React.useState('');\n    const [lastName, setLastName] = React.useState('');\n    const [emailAddress, setEmailAddress] = React.useState('');\n    const [phone, setPhone] = React.useState('');\n    const [password, setPassword] = React.useState('');\n    const [verifyPassword, setVerifyPassword] = React.useState('');\n\n    //Setup for live phone number verification and formatting\n    // React.useEffect(() => {\n\n    // }, [phone])\n\n\n    return(\n        <div \n        className={`login-modul${props.modulStatus}`}>\n            <Paper \n            className='login-modul-paper'\n            style={styles.paperStyle} \n            elevation={2}>\n                <main \n                className='login-modul-paper-content'>\n                    <span className='font-one'>Sign Up For An Account Today</span>\n                    <span className='login-modul-line'></span>\n                    <div>\n                        <TextField\n                        variant=\"outlined\"\n                        placeholder=\"First Name\"\n                        style={styles.textFieldStyle}\n                        onChange={e => setFirstName(e.target.value)}\n                        />\n                        \n                        <TextField\n                        variant=\"outlined\"\n                        placeholder=\"Last Name\"\n                        style={styles.textFieldStyle}\n                        onChange={e => setLastName(e.target.value)}\n                        />\n                    </div>\n                    <div>\n                        <TextField\n                        variant=\"outlined\"\n                        placeholder=\"Email Address\"\n                        type=\"email\"\n                        style={styles.textFieldStyle}\n                        onChange={e => setEmailAddress(e.target.value)}\n                        />\n\n                        <TextField\n                        variant=\"outlined\"\n                        placeholder=\"Phone Number\"\n                        type=\"tel\"\n                        style={styles.textFieldStyle}\n                        onChange={e => setPhone(e.target.value)}\n                        />\n                    </div>\n                    <div>\n                        <TextField \n                        variant=\"outlined\"\n                        placeholder=\"Password\"\n                        type=\"password\"\n                        style={styles.textFieldStyle}\n                        onChange={e => setPassword(e.target.value)}\n                        />\n\n                        <TextField \n                        variant=\"outlined\"\n                        placeholder=\"Verify Password\"\n                        type=\"password\" \n                        style={styles.textFieldStyle}\n                        onChange={e => setVerifyPassword(e.target.value)}\n                        />\n                    </div>\n\n                    <div>\n                        <Button\n                        variant=\"contained\"\n                        style={styles.buttonStyle}\n                        >\n                            Sign Up\n                        </Button> \n                    </div>\n                </main>\n            </Paper>\n        </div>\n    )\n}\n\nexport default LoginModul;","export default {\n    appBarStyle: {\n        backgroundColor: \"#212529\"\n    },\n    typographyStyle: {\n        color: 'white',\n    },\n    buttonStyle: {\n        color: 'white'\n    },\n}","import React from 'react';\n//css\nimport './Nav.css';\n//mui\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport LoginModul from '../LoginModul/LoginModul';\n//inline styling\nimport styles from './NavStyles';\n//redux\nimport { connect } from 'react-redux';\n\nconst Nav = props => {\n\n    const [modulStatus, setStatus] = React.useState('');\n\n    return (\n        <div>\n            <AppBar \n            position='static' \n            style={styles.appBarStyle}>\n                <Toolbar \n                className='nav-toolbar'>\n                    <Typography \n                    variant=\"title\" \n                    style={styles.typographyStyle}>\n                        Home\n                    </Typography>\n                    {/* <Button\n                    style={styles.buttonStyle}\n                    onClick={() => setStatus(modulStatus === '-open' ? '-close' : '-open')}\n                    >\n                        GET STARTED\n                    </Button> */}\n                    <Typography\n                    variant='title'\n                    style={styles.typographyStyle}\n                    >\n                    {props.currPage ? <>\n                    Step {props.currPage} of 26\n                    </> : null }\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <LoginModul \n            modulStatus={modulStatus} />\n        </div>\n    )\n}\n\nconst mapStateToProps = state => state;\n\nexport default connect(mapStateToProps)(Nav);","const initialState = {\n    propertyTypes: [],\n    housingTypes: [],\n    homeStyles: []\n}\n//type constants\n\nconst ADD_PROPERTY_TYPE = 'ADD_PROPERTY_TYPE';\nconst ADD_HOUSING_TYPE = 'ADD_HOUSING_TYPE';\nconst ADD_HOME_STYLE = 'ADD_HOME_STYLE';\nconst REMOVE_PROPERTY_TYPE = 'REMOVE_PROPERTY_TYPE';\nconst REMOVE_HOUSING_TYPE = 'REMOVE_HOUSING_TYPE';\nconst REMOVE_HOME_STYLE = 'REMOVE_HOME_STYLE';\n\n//action creators\n\nexport function removeHomeStyle(style) {\n    return {\n        type: REMOVE_HOME_STYLE,\n        payload: style\n    }\n}\nexport function addHomeStyle(style) {\n    return {\n        type: ADD_HOME_STYLE,\n        payload: style\n    }\n}\nexport function removeHousingType(type) {\n    return {\n        type: REMOVE_HOUSING_TYPE,\n        payload: type\n    }\n} \n\nexport function addHousingType(type) {\n    return {\n        type: ADD_HOUSING_TYPE,\n        payload: type\n    }\n}\n\nexport function removePropertyType(type) {\n    return {\n        type: REMOVE_PROPERTY_TYPE,\n        payload: type\n    }\n}\n\nexport function addPropertyType(type) {\n    return {\n        type: ADD_PROPERTY_TYPE,\n        payload: type\n    }\n}\n\nexport default function reducer(state=initialState, action) {\n    switch(action.type) {\n        case ADD_PROPERTY_TYPE:\n            return {\n                ...state,\n                propertyTypes: [...state.propertyTypes, action.payload]\n            }\n        case REMOVE_PROPERTY_TYPE:\n            let newPropertyTypes = [...state.propertyTypes];\n            newPropertyTypes.splice(newPropertyTypes.findIndex(val => {\n                return val === action.payload\n            }), 1);\n            return {\n                ...state,\n                propertyTypes: newPropertyTypes\n            }\n        case ADD_HOUSING_TYPE:\n            return {\n                ...state,\n                housingTypes: [...state.housingTypes, action.payload]\n            }\n        case REMOVE_HOUSING_TYPE:\n            let newHousingTypes = [...state.housingTypes];\n            newHousingTypes.splice(newHousingTypes.findIndex(val => {\n                return val === action.payload\n            }), 1);\n            return {\n                ...state,\n                housingTypes: newHousingTypes\n            }\n        case ADD_HOME_STYLE:\n            return {\n                ...state,\n                homeStyles: [...state.homeStyles, action.payload]\n            }\n        case REMOVE_HOME_STYLE:\n            let newHomeStyles = [...state.homeStyles];\n            newHomeStyles.splice(newHomeStyles.findIndex(val => {\n                return val === action.payload\n            }), 1)\n            return {\n                ...state,\n                homeStyles: newHomeStyles\n            }\n        default: return state;\n    }\n}","import { createStore, combineReducers, compose } from 'redux';\nimport userReducer from './userReducer';\nimport formInfoReducer from './formInfoReducer';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nlet reducer = combineReducers({\n    userReducer,\n    formInfoReducer\n})\n\nexport default createStore(reducer, composeEnhancers());\n","import style from '../Intro/IntroStyles';\n\nexport default {\n    buttonStyle: style.buttonStyle\n}","import React from 'react';\n//mui imports\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\n//css imports\nimport './Welcome.css';\n//inline styles import\nimport styles from './WelcomeStyles';\n//routing\nimport { Link } from 'react-router-dom';\n\nconst Welcome = props => {\n    return(\n        <div\n        className='welcome-container'\n        >\n            <Paper\n            className='welcome-paper'\n            >\n                <h1>Thanks for that! We can now get started on the important bits</h1>\n                <Link to='/page/1'>\n                    <Button\n                    variant='contained'\n                    style={styles.buttonStyle}\n                    >\n                        Proceed\n                    </Button>\n                </Link>\n            </Paper>\n        </div>\n    )\n}\n\nexport default Welcome;","import React from 'react';\n//mui\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst CheckboxComp = props => {\n    const [isChecked, toggle] = React.useState(false);\n    const handleChange = () => {\n        toggle(!isChecked);\n        if(isChecked) {\n            props.whenClicked();\n        } else {\n            props.whenUnclicked();\n        }\n    }\n    return (\n        <>\n            <FormControlLabel \n            control={\n                <Checkbox \n                // onChange={() => props.whenClicked ? props.whenClicked() : null}\n                onChange={handleChange}\n                />\n            }\n            label={props.label}\n            />\n        </>\n    )\n}\n\nexport default CheckboxComp","import externalStyle from '../Intro/IntroStyles'\nexport default {\n    buttonStyle: {\n        ...externalStyle.buttonStyle,\n        marginTop: '3vh'\n    }\n}","import React, {useState, useEffect} from 'react';\n//mui\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\n//css\nimport './PageOne.css';\n//redux\nimport { setCurrentPage } from '../../redux/userReducer';\nimport { connect } from 'react-redux';\n//components\nimport CheckboxComp from '../CheckboxComp/CheckboxComp';\n//inline styling\nimport styles from './PageOneStyles'\n\nconst PageOne = props => {\n    const [numPickedFirstAnswer, setFirst] = useState(false);\n    const [numPickedSecondAnswer, setSecond] = useState(false);\n\n    //pass down functions for CheckboxComp\n    const setPicked = () => {\n        setFirst(numPickedFirstAnswer + 1);\n    }\n\n    const unPicked = () => {\n        setFirst(numPickedFirstAnswer - 1);\n    }\n\n    const setPicked2 = () => {\n        setSecond(numPickedSecondAnswer + 1);\n    }\n\n    const unPicked2 = () => {\n        setSecond(numPickedSecondAnswer - 1);\n    }\n\n    //update page in nav\n    useEffect(() => {\n        props.setCurrentPage(1);\n    }, [])\n\n    //req info\n    const propertyTypes = ['Condo', 'Farm/Ranch', 'Half Duplex', 'Single Family', 'Townhouse'];\n    const housingTypes = ['Apartment', 'Attached or 1/2 duplex', 'Condo/Townhome', 'Designated Historical Home', 'Doublewide Mobile w/ Land', 'Farm/Ranch House', 'Garden/Zero Lot Line', 'Hi Rise', 'Historical/Conservation Dist.', 'Interval Ownership', 'Lake House', 'Log Cabin', 'Manufacture (cert exch)', 'Resort Property', 'Single Detached', 'Single Mobile w/ Land', 'Underground', 'Vacation Home'];\n    const optionalHousingStyles = ['A-Frame', 'Colonial', 'Contemporary/Modern', 'Craftman', 'Early American', 'English', 'French', 'Geo/Dome', 'Loft', 'Mediterranean', 'Mid-Century Modern', 'Oriental', 'Other', 'Prairie', 'Ranch', 'Southwestern', 'Spanish', 'Split Level', 'Studio', 'Traditional', 'Tudor', 'Victorian']\n    return(\n        <div\n        className='page-one-container'\n        >\n            <Paper\n            className='page-one-paper'\n            >   \n                <div\n                className='page-one-fade-in'>\n                    <h1>Please select a property type:</h1>\n                    {propertyTypes.map(val => {\n                        return <CheckboxComp \n                        label={val}\n                        whenClicked={setPicked}\n                        whenUnclicked={unPicked}\n                        />\n                    })}\n                </div>\n                {numPickedFirstAnswer ?\n                <div className='page-one-fade-in'>\n                    <h1>\n                        Select all that describe your housing type:\n                    </h1>\n                    {housingTypes.map(val => {\n                        return <CheckboxComp \n                        label={val}\n                        whenClicked={setPicked2}\n                        whenUnclicked={unPicked2}\n                        />\n                    })}\n                </div> : null\n                }\n\n                {/* vvvvv answers not required vvvvv */}\n                {numPickedSecondAnswer && numPickedFirstAnswer ? \n                <div className='page-one-fade-in'>\n                    <h1>\n                        Select any home styles that apply\n                    </h1>\n                    {optionalHousingStyles.map(val => {\n                        return <CheckboxComp\n                        label={val}\n                        />\n                    })}\n                </div> : null}\n\n                <br />\n                {numPickedSecondAnswer && numPickedFirstAnswer ? <Button\n                className='page-one-fade-in'\n                style={styles.buttonStyle}\n                variant='contained'\n                >\n                    Next\n                </Button> : null}\n            </Paper>\n        </div>\n    )\n}\n\nconst mapStateToProps = props => props;\n\nexport default connect(mapStateToProps, {setCurrentPage})(PageOne);","import React from 'react';\n//components\nimport PageOne from '../PageOne/PageOne';\nconst Page = props => {\n    switch(props.match.params.pageNum) {\n        case '1':\n        return <PageOne />\n        default: return <div>\n            <h1>Oops! Page could not be found :( Please contact site administrator at mykenzierogers@gmail.com</h1>\n        </div>\n    }\n}\n\nexport default Page;","import React from 'react';\n//routing imports\nimport {Switch, Route} from 'react-router-dom';\n//component imports\nimport Intro from './components/Intro/Intro'\nimport Welcome from './components/Welcome/Welcome';\nimport Page from './components/Page/Page';\n\nexport default (\n    <Switch>\n        <Route path='/page/:pageNum' component={Page} />\n        <Route path='/welcome' component={Welcome} />\n        <Route path='/' component={Intro} />\n    </Switch>\n)","import React from 'react';\n//component imports\nimport Intro from './components/Intro/Intro'\nimport Nav from './components/Nav/Nav';\n//css imports\nimport './App.css';\n//redux imports\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n//routing imports\nimport { HashRouter } from 'react-router-dom'\nimport routes from './routes'\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Provider store={store}>\n        <div className=\"App\">\n          <Nav />\n          {routes}\n        </div>\n      </Provider>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}